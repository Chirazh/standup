---
include:
- '/k8s/.deploy-standup.yml'

#

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  NODE_VERSION: "10.15-slim"
  NGINX_VERSION: "1.17"
  UBUNTU_VERSION: "18.10"
  FRONT_PORT: 80
  FEATURE_ENVIRONMENT_NAME: "feature-dev"
  MASTER_ENVIRONMENT_NAME: "master-dev"

#

.get_github_id_stage: &get_github_id_stage
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
  script:
  - sh k8s/scripts/get-github-deploy-id.sh
  artifacts:
    paths:
    - github_deploy_id

.node_stage_template: &node_stage
  image: node:$NODE_VERSION
  before_script:
    - yarn --frozen-lockfile

.deploy_stage: &deploy_stage
  stage: "Deploy Standup"
  dependencies: []
  variables: &deploy_stage_variables
    STANDUP_REGISTRY: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_COMMIT_SHA

.send_url_to_github_stage: &send_url_to_github_stage
  stage: "Send Url to GitHub"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  script:
  - export DEPLOY_ID=$(cat github_deploy_id)
  - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
  - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME

# 

stages:
  - "Prepare"
  - "Build"
  - "Code Quality"
  - "Register Docker Image"
  - "Test Docker Image"
  - "Deploy Standup"
  - "Send Url to GitHub"
  - "Delete k8s objects"


###########################################
###               PREPARE               ###
###########################################


Get Github Id (feature):
  <<: *get_github_id_stage
  stage: "Prepare"
  environment:
    name: $FEATURE_ENVIRONMENT_NAME
  except:
  - master

Get Github Id (master):
  <<: *get_github_id_stage
  stage: "Prepare"
  environment:
    name: $MASTER_ENVIRONMENT_NAME
  only:
  - master

Build Assets:
  <<: *node_stage
  stage: "Prepare"
  script:
    - yarn build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  artifacts:
    expire_in: "1 day"
    paths:
    - build


###########################################
###             CODE QUALITY            ###
###########################################


Test:
  <<: *node_stage
  stage: "Code Quality"
  script:
    - yarn test

Lint:
  <<: *node_stage
  stage: "Code Quality"
  script:
  - yarn lint


###########################################
###       REGISTER DOCKER IMAGES        ###
###########################################


Register Docker image:
  stage: "Register Docker Image"
  image: docker:18
  services:
    - name: docker:18-dind
  before_script:
    - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  script:
    - docker pull  $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA|| true
    - >-
      docker build
      --build-arg NGINX_VERSION=$NGINX_VERSION
      --build-arg EXPOSED_PORT=$FRONT_PORT
      --cache-from "$CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA"
      -t  "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"


###########################################
###          TEST DOCKER IMAGE          ###
###########################################


Test Docker image:
  stage: "Test Docker Image"
  image: ubuntu:$UBUNTU_VERSION
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  script:
    - apt update && apt install -y curl
    - curl -v http://localhost:$FRONT_PORT


###########################################
###            DEPLOY TO K8S            ###
###########################################


Deploy Standup (feature):
  <<: *deploy_stage
  extends: .deploy-standup-k8s-feature
  variables:
    <<: *deploy_stage_variables
    PORT: $FRONT_PORT
  environment:
    name: $FEATURE_ENVIRONMENT_NAME
  except:
  - master

Deploy Standup (master):
  <<: *deploy_stage
  extends: .deploy-standup-k8s-master
  variables:
    <<: *deploy_stage_variables
    PORT: $FRONT_PORT
  environment:
    name: $MASTER_ENVIRONMENT_NAME
  only:
  - master

###########################################
###         SEND URL TO GITHUB          ###
###########################################


Send deployment url to Github (feature):
  <<: *send_url_to_github_stage
  before_script:
  - HASH_BRANCH_NAME=$(printf "$CI_COMMIT_REF_NAME" | sha1sum | cut -c1-5)
  - export HASH_BRANCH_NAME=$HASH_BRANCH_NAME
  - export URL=http://$HASH_BRANCH_NAME.standup.${DOMAIN_NAME}/
  environment:
    name: $FEATURE_ENVIRONMENT_NAME
  except:
  - master

Send deployment url to Github (prod):
  <<: *send_url_to_github_stage
  variables:
    URL: https://master.standup.${DOMAIN_NAME}/
  environment:
    name: $MASTER_ENVIRONMENT_NAME
  only:
  - master


###########################################
###     DELETE USELESS K8S OBJECTS      ###
###########################################


#Delete useless k8s objects:
#  stage: "Delete k8s objects"
#  image:
#    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
#    entrypoint: [""]
#  before_script:
#  - /apps/create-kubeconfig.sh
#  script:
#  - python3 k8s/scripts/delete-k8s-objects.py
#  environment:
#    name: $FEATURE_ENVIRONMENT_NAME
#  only:
#  - master


#TODO: Release and publish (manual ? on tag only)
