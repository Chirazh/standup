---
include:
- '/k8s/.deploy-standup.yml'

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  FRONT_PORT: 3000

.node_stage_template: &node_stage
  image: node:10.15-slim
  before_script:
    - yarn --frozen-lockfile

.deploy_stage: &deploy_stage
  stage: "Deploy Standup"
  dependencies: []
  variables: &deploy_stage_variables
    STANDUP_REGISTRY: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_COMMIT_SHA

# 

stages:
  - "Build"
  - "Test"
  - "Dockerize"
  - "Integration tests"
  - "Deploy Standup"

#

build:
  <<: *node_stage
  stage: "Build"
  script:
    - yarn build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  artifacts:
    expire_in: "1 day"
    paths:
      - build
      - node_modules

test:
  <<: *node_stage
  stage: "Test"
  script:
    - yarn test

lint:
  <<: *node_stage
  stage: "Test"
  script:
  - yarn lint

docker_image:
  stage: "Dockerize"
  image: docker:stable
  services:
    - name: docker:stable-dind
  before_script:
    - docker login $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN
  script:
    - docker pull  $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA|| true
    - >-
      docker build
      --cache-from "$CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA"
      -t  "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

run_docker_image:
  stage: "Integration tests"
  image: ubuntu:18.10
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  script:
    - apt update && apt install -y curl
    - curl -v http://localhost:$FRONT_PORT

Deploy Standup (dev):
  <<: *deploy_stage
  extends: .deploy-standup-k8s-dev
  variables:
    <<: *deploy_stage_variables
    PORT: $FRONT_PORT
  environment:
    name: dev.factory
  except:
  - master

#TODO: Deploy test env
#TODO: Release and publish (manual ? on tag only)
