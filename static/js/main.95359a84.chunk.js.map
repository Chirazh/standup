{"version":3,"sources":["formatSeconds.ts","index.js"],"names":["pad","num","String","Timer","state","start","tick","_this","forceUpdate","this","setState","Date","interval","setInterval","clearInterval","elapsed","parseInt","getTime","props","render","React","Component","StandupIntro","_ref","onClick","react_default","a","createElement","className","Standup","index","next","Math","min","_this2","startups","length","curState","prev","max","onKeyEvent","key","src_StandupIntro","startup","nextStartup","react_keyboard_event_handler_default","handleKeys","titre","dangerouslySetInnerHTML","__html","description","url","href","target","rel","style","color","fontSize","textDecoration","e","stopPropagation","src_Timer","_ref2","src_Counter","seconds","timeout","Counter","_ref3","_ref3$timeout","concat","minutes","secs","floor","formatSeconds","rootElement","document","getElementById","ReactDOM","src_Standup"],"mappings":"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","file":"static/js/main.95359a84.chunk.js","sourcesContent":["//\n\nconst pad = (num: number) => String(num < 10 ? \"0\" + num : num);\n\nexport const formatSeconds = (seconds: number) => {\n  let minutes = 0;\n  let secs = 0;\n  if (seconds >= 60) {\n    minutes = Math.floor(seconds / 60);\n    secs = seconds - minutes * 60;\n  } else {\n    secs = seconds;\n  }\n  return `${pad(minutes)}:${pad(secs)}`;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nimport \"./styles.css\";\nimport startups from \"./startups.json\";\n\nimport { formatSeconds } from \"./formatSeconds\";\n\nclass Timer extends React.Component {\n  state = {\n    start: null\n  };\n  componentDidMount() {\n    this.setState({\n      start: new Date()\n    });\n    this.interval = setInterval(this.tick, 1000);\n  }\n  tick = () => {\n    this.forceUpdate();\n  };\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  componentWillReceiveProps() {\n    this.setState({\n      start: new Date()\n    });\n  }\n  render() {\n    const elapsed =\n      (this.state.start &&\n        parseInt(\n          (new Date().getTime() - this.state.start.getTime()) / 1000,\n          10\n        )) ||\n      0;\n    return this.props.render({\n      elapsed\n    });\n  }\n}\n\nconst StandupIntro = ({ onClick }) => (\n  <div>\n    <h1>STAND-UP</h1>\n    <button className=\"start-button\" onClick={onClick}>\n      COMMENCER\n    </button>\n  </div>\n);\n\nclass Standup extends React.Component {\n  state = {\n    index: -1\n  };\n  next = () => {\n    const nextIndex = Math.min(\n      this.props.startups.length - 1,\n      this.state.index + 1\n    );\n    if (nextIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.min(this.props.startups.length - 1, curState.index + 1)\n      }));\n    }\n  };\n  prev = () => {\n    const prevIndex = Math.max(0, this.state.index - 1);\n    if (prevIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.max(0, curState.index - 1)\n      }));\n    }\n  };\n  onKeyEvent = key => {\n    if (key === \"left\") {\n      this.prev();\n    } else if (key === \"right\") {\n      this.next();\n    } else if (key === \"space\") {\n      this.next();\n    }\n  };\n  render() {\n    if (this.state.index === -1) {\n      return <StandupIntro onClick={this.next} />;\n    }\n    const startup = this.props.startups[this.state.index];\n    const nextStartup =\n      this.state.index < this.props.startups.length - 1 &&\n      this.props.startups[this.state.index + 1];\n    return (\n      <div className=\"container\" onClick={this.next}>\n        <KeyboardEventHandler\n          handleKeys={[\"left\", \"right\", \"space\"]}\n          onKeyEvent={this.onKeyEvent}\n        />\n\n        <h2 className=\"timed-slide__title\">{startup.titre}</h2>\n        <h3\n          className=\"timed-slide__subtitle\"\n          dangerouslySetInnerHTML={{ __html: startup.description }}\n        />\n        {startup.url && (\n          <a\n            href={startup.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              color: \"#0091ff\",\n              fontSize: \"1.5em\",\n              textDecoration: \"underline\"\n            }}\n            onClick={e => e.stopPropagation()}\n          >\n            slides\n          </a>\n        )}\n        <Timer\n          render={({ elapsed }) => (\n            <Counter seconds={elapsed} timeout={startup.timeout} />\n          )}\n        />\n        {nextStartup && <div className=\"next-slide\">> {nextStartup.titre}</div>}\n      </div>\n    );\n  }\n}\nconst Counter = ({ seconds, timeout = 4 }) => (\n  <div className={`elapsed-time ${(seconds > timeout && \"ending-soon\") || \"\"}`}>\n    {formatSeconds(seconds)}\n  </div>\n);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Standup startups={startups} />, rootElement);\n"],"sourceRoot":""}