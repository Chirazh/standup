{"version":3,"sources":["formatSeconds.ts","index.js"],"names":["pad","num","String","Timer","state","start","tick","forceUpdate","this","setState","Date","interval","setInterval","clearInterval","elapsed","parseInt","getTime","props","render","React","Component","StandupIntro","onClick","className","Standup","index","next","Math","min","startups","length","curState","prev","max","onKeyEvent","key","startup","nextStartup","handleKeys","titre","dangerouslySetInnerHTML","__html","description","url","href","target","rel","style","color","fontSize","textDecoration","e","stopPropagation","seconds","timeout","Counter","minutes","secs","floor","formatSeconds","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.435fda45.chunk.js","sourcesContent":["//\n\nconst pad = (num: number) => String(num < 10 ? \"0\" + num : num);\n\nexport const formatSeconds = (seconds: number) => {\n  let minutes = 0;\n  let secs = 0;\n  if (seconds >= 60) {\n    minutes = Math.floor(seconds / 60);\n    secs = seconds - minutes * 60;\n  } else {\n    secs = seconds;\n  }\n  return `${pad(minutes)}:${pad(secs)}`;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nimport \"./styles.css\";\nimport startups from \"./startups.json\";\n\nimport { formatSeconds } from \"./formatSeconds\";\n\nclass Timer extends React.Component {\n  state = {\n    start: null\n  };\n  componentDidMount() {\n    this.setState({\n      start: new Date()\n    });\n    this.interval = setInterval(this.tick, 1000);\n  }\n  tick = () => {\n    this.forceUpdate();\n  };\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  componentWillReceiveProps() {\n    this.setState({\n      start: new Date()\n    });\n  }\n  render() {\n    const elapsed =\n      (this.state.start &&\n        parseInt(\n          (new Date().getTime() - this.state.start.getTime()) / 1000,\n          10\n        )) ||\n      0;\n    return this.props.render({\n      elapsed\n    });\n  }\n}\n\nconst StandupIntro = ({ onClick }) => (\n  <div>\n    <h1>STAND-UP</h1>\n    <button className=\"start-button\" onClick={onClick}>\n      COMMENCER\n    </button>\n  </div>\n);\n\nclass Standup extends React.Component {\n  state = {\n    index: -1\n  };\n  next = () => {\n    const nextIndex = Math.min(\n      this.props.startups.length - 1,\n      this.state.index + 1\n    );\n    if (nextIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.min(this.props.startups.length - 1, curState.index + 1)\n      }));\n    }\n  };\n  prev = () => {\n    const prevIndex = Math.max(0, this.state.index - 1);\n    if (prevIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.max(0, curState.index - 1)\n      }));\n    }\n  };\n  onKeyEvent = key => {\n    if (key === \"left\") {\n      this.prev();\n    } else if (key === \"right\") {\n      this.next();\n    } else if (key === \"space\") {\n      this.next();\n    }\n  };\n  render() {\n    if (this.state.index === -1) {\n      return <StandupIntro onClick={this.next} />;\n    }\n    const startup = this.props.startups[this.state.index];\n    const nextStartup =\n      this.state.index < this.props.startups.length - 1 &&\n      this.props.startups[this.state.index + 1];\n    return (\n      <div className=\"container\" onClick={this.next}>\n        <KeyboardEventHandler\n          handleKeys={[\"left\", \"right\", \"space\"]}\n          onKeyEvent={this.onKeyEvent}\n        />\n\n        <h2 className=\"timed-slide__title\">{startup.titre}</h2>\n        <h3\n          className=\"timed-slide__subtitle\"\n          dangerouslySetInnerHTML={{ __html: startup.description }}\n        />\n        {startup.url && (\n          <a\n            href={startup.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              color: \"#0091ff\",\n              fontSize: \"1.5em\",\n              textDecoration: \"underline\"\n            }}\n            onClick={e => e.stopPropagation()}\n          >\n            slides\n          </a>\n        )}\n        <Timer\n          render={({ elapsed }) => (\n            <Counter seconds={elapsed} timeout={startup.timeout} />\n          )}\n        />\n        {nextStartup && <div className=\"next-slide\">> {nextStartup.titre}</div>}\n      </div>\n    );\n  }\n}\nconst Counter = ({ seconds, timeout = 4 }) => (\n  <div className={`elapsed-time ${(seconds > timeout && \"ending-soon\") || \"\"}`}>\n    {formatSeconds(seconds)}\n  </div>\n);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Standup startups={startups} />, rootElement);\n"],"sourceRoot":""}