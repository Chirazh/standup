{"version":3,"sources":["formatSeconds.ts","index.js"],"names":["pad","num","String","Timer","state","start","tick","forceUpdate","this","setState","Date","interval","setInterval","clearInterval","elapsed","parseInt","getTime","props","render","React","Component","StandupIntro","onClick","className","Slide","titre","description","image","url","timeout","buttonText","Fragment","dangerouslySetInnerHTML","__html","href","target","rel","style","color","fontSize","textDecoration","e","stopPropagation","ReactImageAppear","key","src","alt","animation","animationDuration","showLoader","seconds","Standup","index","next","Math","min","startups","length","curState","prev","max","onKeyEvent","startup","nextStartup","handleKeys","Counter","minutes","secs","floor","formatSeconds","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.a05fd2d5.chunk.js","sourcesContent":["//\n\nconst pad = (num: number) => String(num < 10 ? \"0\" + num : num);\n\nexport const formatSeconds = (seconds: number) => {\n  let minutes = 0;\n  let secs = 0;\n  if (seconds >= 60) {\n    minutes = Math.floor(seconds / 60);\n    secs = seconds - minutes * 60;\n  } else {\n    secs = seconds;\n  }\n  return `${pad(minutes)}:${pad(secs)}`;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport ReactImageAppear from \"react-image-appear\";\n\nimport \"./styles.css\";\nimport startups from \"./startups.json\";\n\nimport { formatSeconds } from \"./formatSeconds\";\n\nclass Timer extends React.Component {\n  state = {\n    start: null\n  };\n  componentDidMount() {\n    this.setState({\n      start: new Date()\n    });\n    this.interval = setInterval(this.tick, 1000);\n  }\n  tick = () => {\n    this.forceUpdate();\n  };\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  componentWillReceiveProps() {\n    this.setState({\n      start: new Date()\n    });\n  }\n  render() {\n    const elapsed =\n      (this.state.start &&\n        parseInt(\n          (new Date().getTime() - this.state.start.getTime()) / 1000,\n          10\n        )) ||\n      0;\n    return this.props.render({\n      elapsed\n    });\n  }\n}\n\nconst StandupIntro = ({ onClick }) => (\n  <div>\n    <h1>STAND-UP</h1>\n    <button className=\"start-button\" onClick={onClick}>\n      COMMENCER\n    </button>\n  </div>\n);\n\nconst Slide = ({ titre, description, image, url, timeout, buttonText }) => (\n  <React.Fragment>\n    <h2 className=\"timed-slide__title\">{titre}</h2>\n    <h3\n      className=\"timed-slide__subtitle\"\n      dangerouslySetInnerHTML={{ __html: description }}\n    />\n    {url && (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{\n          color: \"#0091ff\",\n          fontSize: \"1.5em\",\n          textDecoration: \"underline\"\n        }}\n        onClick={e => e.stopPropagation()}\n      >\n        slides\n      </a>\n    )}\n    {image && (\n      <ReactImageAppear\n        key={image}\n        src={image}\n        alt={titre}\n        animation=\"fadeIn\"\n        animationDuration=\"0.3s\"\n        showLoader={false}\n      />\n    )}\n    <Timer\n      render={({ elapsed }) => <Counter seconds={elapsed} timeout={timeout} />}\n    />\n    {buttonText && <div className=\"next-slide\">> {buttonText}</div>}\n  </React.Fragment>\n);\n\nclass Standup extends React.Component {\n  state = {\n    index: -1\n  };\n  next = () => {\n    const nextIndex = Math.min(\n      this.props.startups.length - 1,\n      this.state.index + 1\n    );\n    if (nextIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.min(this.props.startups.length - 1, curState.index + 1)\n      }));\n    }\n  };\n  prev = () => {\n    const prevIndex = Math.max(0, this.state.index - 1);\n    if (prevIndex !== this.state.index) {\n      this.setState(curState => ({\n        index: Math.max(0, curState.index - 1)\n      }));\n    }\n  };\n  onKeyEvent = key => {\n    if (key === \"left\") {\n      this.prev();\n    } else if (key === \"right\") {\n      this.next();\n    } else if (key === \"space\") {\n      this.next();\n    }\n  };\n  render() {\n    if (this.state.index === -1) {\n      return <StandupIntro onClick={this.next} />;\n    }\n    const startup = this.props.startups[this.state.index];\n    const nextStartup =\n      this.state.index < this.props.startups.length - 1 &&\n      this.props.startups[this.state.index + 1];\n    return (\n      <div className=\"container\" onClick={this.next}>\n        <KeyboardEventHandler\n          handleKeys={[\"left\", \"right\", \"space\"]}\n          onKeyEvent={this.onKeyEvent}\n        />\n        <Slide {...startup} buttonText={nextStartup && nextStartup.titre} />\n      </div>\n    );\n  }\n}\nconst Counter = ({ seconds, timeout = 4 }) => (\n  <div className={`elapsed-time ${(seconds > timeout && \"ending-soon\") || \"\"}`}>\n    {formatSeconds(seconds)}\n  </div>\n);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Standup startups={startups} />, rootElement);\n"],"sourceRoot":""}